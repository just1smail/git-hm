import axios from "axios";
import React, { useEffect, useState } from "react";
import EditNoteIcon from "@mui/icons-material/EditNote";
import DeleteOutlineIcon from "@mui/icons-material/DeleteOutline";
import Paper from "@mui/material/Paper";
import InputBase from "@mui/material/InputBase";
import Divider from "@mui/material/Divider";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import SearchIcon from "@mui/icons-material/Search";
import DirectionsIcon from "@mui/icons-material/Directions";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";

import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import DialogContentText from "@mui/material/DialogContentText";
import DialogTitle from "@mui/material/DialogTitle";
import Slide from "@mui/material/Slide";

import Box from "@mui/material/Box";
import Drawer from "@mui/material/Drawer";
import List from "@mui/material/List";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import InboxIcon from "@mui/icons-material/MoveToInbox";
import MailIcon from "@mui/icons-material/Mail";

import TextField from "@mui/material/TextField";

const API = "https://6651bde420f4f4c4427894da.mockapi.io/card";

const Transition = React.forwardRef(function Transition(props, ref) {
  return <Slide direction="up" ref={ref} {...props} />;
});

const Abu = () => {
  const options = [
    {
      id: 1,
      name: "–ü–û–ß–¢–ê –†–û–°–°–ò–ò",
      duration: "10-14 –¥–Ω–µ–π",
      cost: "–æ—Ç ¬£27.00",
      total: "¬£41.99",
      icon: "üì¨", // Placeholder for icon
    },
    {
      id: 2,
      name: "EMS –ü–û–ß–¢–ê –†–û–°–°–ò–Ø",
      duration: "9-12 –¥–Ω–µ–π",
      cost: "–æ—Ç ¬£40.00",
      total: "¬£54.55",
      icon: "üöÄ", // Placeholder for icon
    },
    {
      id: 3,
      name: "–ü–û–ß–¢–ê –†–û–°–°–ò–ò –ú–ï–õ–ö–ò–ï –ü–ê–ö–ï–¢–´",
      duration: "10-14 –¥–Ω–µ–π",
      cost: "–æ—Ç ¬£13.00",
      total: "¬£90.50",
      icon: "üì¶", // Placeholder for icon
    },
  ];

  const [data, setData] = useState([]);
  const [country, setCountry] = useState("Russia");
  const [city, setCity] = useState("");
  const [index, setIndex] = useState("");
  const [weight, setWeight] = useState("");
  const [additionalService, setAdditionalService] = useState("");
  let [idX, setIdX] = useState("");
  let [idX1, setIdX1] = useState("");
  let [addImg, setAddImg] = useState("");
  let [addName, setAddName] = useState("");
  let [addDesc, setAddDesc] = useState("");
  let [addPrice, setAddPrice] = useState("");
  let [editImg, setEditImg] = useState("");
  let [editName, setEditName] = useState("");
  let [editDesc, setEditDesc] = useState("");
  let [editPrice, setEditPrice] = useState("");

  let [search,setSearch] = useState("");

  async function getData() {
    try {
      let { data } = await axios.get(API);
      setData(data);
    } catch (error) {
      console.log(error);
    }
  }

  async function deleteUser(id) {
    try {
      let { data } = await axios.delete(`${API}/${id}`);
      getData();
    } catch (error) {
      console.log(error);
    }
  }

  async function addUser() {
    try {
      let { data } = await axios.post(`${API}`, {
        name: addName,
        des: addDesc,
        price: addPrice,
        img: addImg,
      });

      getData();
      setAddName("");
      setAddDesc("");
      setAddPrice("");
      setAddImg("");
    } catch (error) {
      console.log(error);
    }
  }

  async function editUser() {
    try {
      let { data } = await axios.put(`${API}/${idX1}`, {
        name: editName,
        desc: editDesc,
        price: editPrice,
        img: editImg,
      });
      getData();
    } catch (error) {
      console.log(error);
    }
  }


    async function searchUser(search) {
      try {
        const { data } = await axios.get(`${API}?name=${search}`);
        setData(data);
      } catch (error) {
        console.error(error);
      }
    }

  useEffect(() => {
    getData();
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
  };

  const [open, setOpen] = useState(false);

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  const [open1, setOpen1] = useState(false);

  const toggleDrawer = (newOpen) => () => {
    setOpen1(newOpen);
  };

  const DrawerList = (
    <Box sx={{ width: 250 }} role="presentation">
      <TextField
        value={addImg}
        onChange={(e) => {
          setAddImg(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="img"
        variant="outlined"
      />
      <TextField
        value={addName}
        onChange={(e) => {
          setAddName(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="name"
        variant="outlined"
      />
      <TextField
        value={addDesc}
        onChange={(e) => {
          setAddDesc(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="desc"
        variant="outlined"
      />
      <TextField
        value={addPrice}
        onChange={(e) => {
          setAddPrice(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="price"
        variant="outlined"
      />
      <div className="flex items-center justify-between px-[30px] mt-[20px]">
        <Button
          onClick={() => {
            addUser(), setOpen1(false);
          }}
          variant="contained"
        >
          Add
        </Button>
        <Button
          sx={{ bgcolor: "red" }}
          onClick={() => {
            setOpen1(false);
          }}
          variant="contained"
        >
          Cansel
        </Button>
      </div>
    </Box>
  );

  const [open2, setOpen2] = useState(false);

  const toggleDrawer2 = (newOpen) => () => {
    setOpen2(newOpen);
  };

  const DrawerList2 = (
    <Box sx={{ width: 250 }} role="presentation">
      <TextField
        value={editImg}
        onChange={(e) => {
          setEditImg(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="img"
        variant="outlined"
      />
      <TextField
        value={editName}
        onChange={(e) => {
          setEditName(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="name"
        variant="outlined"
      />
      <TextField
        value={editDesc}
        onChange={(e) => {
          setEditDesc(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="desc"
        variant="outlined"
      />
      <TextField
        value={editPrice}
        onChange={(e) => {
          setEditPrice(e.target.value);
        }}
        sx={{ marginLeft: "10px", marginTop: "20px" }}
        id="outlined-basic"
        label="price"
        variant="outlined"
      />
      <div className="flex items-center justify-between px-[30px] mt-[20px]">
        <Button
          onClick={() => {
            editUser(), setOpen2(false);
          }}
          variant="contained"
        >
          save
        </Button>
        <Button
          sx={{ bgcolor: "red" }}
          onClick={() => {
            setOpen2(false);
          }}
          variant="contained"
        >
          Cansel
        </Button>
      </div>
    </Box>
  );

  return (
    <>
      <Drawer open={open1}>{DrawerList}</Drawer>

      <Drawer open={open2}>{DrawerList2}</Drawer>

      <React.Fragment>
        <Dialog
          open={open}
          TransitionComponent={Transition}
          keepMounted
          aria-describedby="alert-dialog-slide-description"
        >
          <DialogTitle>{"Are you sure"}</DialogTitle>
          <DialogContent>
            <DialogContentText id="alert-dialog-slide-description">
              Are you sure to delete this card?
            </DialogContentText>
          </DialogContent>
          <DialogActions>
            <Button
              onClick={() => {
                deleteUser(idX), setOpen(false);
              }}
            >
              Yes
            </Button>
            <Button onClick={handleClose}>Cancel</Button>
          </DialogActions>
        </Dialog>
      </React.Fragment>

      <div className="w-[95%] h-[210px] bg-[url('../../../public/img/layout-img/backround.png')] m-auto rounded-3xl mt-[100px] py-[50px] px-[60px]">
        <p className="text-[20px] text-[#FFFFFF] mb-[10px] font-mono">
          –ì–ª–∞–≤–Ω–∞—è / –¶–µ–Ω—ã
        </p>
        <p className="text-[#FFFFFF] text-[50px] font-mono font-[600]">
          –£—Å–ª—É–≥–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏
        </p>
      </div>

      <div className="flex items-center justify-between px-[40px] mt-[150px] mb-[60px]">
        <Paper
          component="form"
          sx={{
            p: "2px 4px",
            display: "flex",
            alignItems: "center",
            width: 400,
          }}
        >
          <IconButton sx={{ p: "10px" }} aria-label="menu">
            <MenuIcon />
          </IconButton>
          <InputBase
            value={search}
            onChange={(e) => {
              setSearch(e.target.value), searchUser(search);
            }}
            sx={{ ml: 1, flex: 1 }}
            placeholder="Search Google Maps"
            inputProps={{ "aria-label": "search google maps" }}
          />
          <IconButton type="button" sx={{ p: "10px" }} aria-label="search">
            <SearchIcon />
          </IconButton>
          <Divider sx={{ height: 28, m: 0.5 }} orientation="vertical" />
          <IconButton
            color="primary"
            sx={{ p: "10px" }}
            aria-label="directions"
          >
            <DirectionsIcon />
          </IconButton>
        </Paper>

        <Button
          onClick={() => {
            setOpen1(true);
          }}
          variant="contained"
        >
          Add New
        </Button>
      </div>
      <div className="flex items-center flex-wrap justify-evenly">
        {data.map((el) => (
          <div
            className="w-[30%] h-[500px] mb-[30px] bg-[white] shadow-lg border rounded-lg"
            key={el.id}
          >
            <img className="w-[100%] h-[60%] rounded-lg" src={el.avatar} />{" "}
            <h1 className="text-[#1F2428] text-[30px] ml-[20px] mt-[15px] mb-[10px] font-mono font-[600]">
              {el.name}
            </h1>
            <p className="text-[grey] text-[20px] font-mono ml-[20px] mb-[10px] mt-[10px] font-[600]">
              {el.desc}
            </p>
            <div className="flex items-center justify-between px-[20px]">
              <button className="bg-[aqua] text-[white] px-[30px] py-[7px] rounded-sm mt-[10px] font-mono font-[600]">
                {el.price}
              </button>

              <div>
                <button
                  onClick={() => {
                    setOpen2(true), setEditImg(el.avatar);
                    setEditDesc(el.desc);
                    setEditName(el.name);
                    setEditPrice(el.price), setIdX1(el.id);
                  }}
                >
                  <EditNoteIcon />
                </button>
                <button
                  onClick={() => {
                    setOpen(true), setIdX(el.id);
                  }}
                  className="text-[red] ml-[10px]"
                >
                  <DeleteOutlineIcon />
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      <div className="flex items-center justify-between px-[100px] mt-[100px]">
        <div className="w-[45%]">
          <h1 className="text-[45px] font-bold">
            –û–Ω–ª–∞–π–Ω-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞
          </h1>
          <p className="text-[17px] font-bold mt-[15px] text-[grey]">
            –ó–∞–¥–∞–π—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å—ã–ª–∫–∏, –∏ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç
            –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏ –∏–∑ –ê–Ω–≥–ª–∏–∏.
          </p>
        </div>

        <div className="w-[40%]">
          <form className="flex flex-col gap-4 w-full">
            <label className="flex flex-col">
              <span className="mb-[5px]">–°—Ç—Ä–∞–Ω–∞:</span>
              <select className="mt-1 p-2 border border-gray-300 rounded">
                <option value="Russia">–†–æ—Å—Å–∏—è</option>
                <option value="Other">–î—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞</option>
              </select>
            </label>
            <label className="flex flex-col">
              <span className="mb-[5px]">–ì–æ—Ä–æ–¥:</span>
              <input
                type="text"
                className="mt-1 p-2 border border-gray-300 rounded"
              />
            </label>
            <label className="flex flex-col">
              <span className="mb-[5px]">–í–µ—Å –ø–æ—Å—ã–ª–∫–∏:</span>
              <input
                type="text"
                className="mt-1 p-2 border border-gray-300 rounded"
              />
            </label>
            <label className="flex flex-col">
              <span className="mb-[5px]">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:</span>
              <select className="mt-1 p-2 border border-gray-300 rounded">
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥–∏</option>
                <option value="Service1">–£—Å–ª—É–≥–∞ 1</option>
                <option value="Service2">–£—Å–ª—É–≥–∞ 2</option>
              </select>
            </label>
            <button className="mt-4 p-2 bg-green-500 text-white rounded">
              –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
            </button>
          </form>
        </div>
      </div>

      <div className="w-[85%] m-auto mt-[150px]">
        <h1 className="text-2xl font-bold mb-[20px]">–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:</h1>
        {options.map((el) => (
          <div
            key={el.id}
            className="flex items-center justify-between bg-white p-4 mb-[25px] rounded shadow"
          >
            <div className="flex items-center">
              <div className="text-4xl mr-4">{el.icon}</div>
              <div>
                <h2 className="font-bold">{el.name}</h2>
                <p className="text-sm text-gray-500">–°—Ä–æ–∫–∏: {el.duration}</p>
              </div>
            </div>
            <div className="flex flex-col items-end">
              <p className="text-sm text-gray-500">
                –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {el.cost}
              </p>
              <p className="font-bold">–ò—Ç–æ–≥–æ: {el.total}</p>
            </div>
          </div>
        ))}
      </div>

      <div className="w-[85%] mx-auto p-6 rounded-lg  mt-[120px]">
        <h2 className="text-2xl font-bold mb-6">
          –ü–æ–∫—É–ø–∫–∏ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ Okeypost.com
        </h2>

        <div className="flex justify-between items-start p-4 mb-4 bg-gray-100 rounded-lg border">
          <div className="max-w-lg">
            <h3 className="text-lg font-semibold mb-2">
              –ë—ã—Å—Ç—Ä–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–∫—É–ø–æ–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞—Ö
            </h3>
            <p className="text-sm text-gray-700">
              –í—ã –ø—Ä–∏—Å—ã–ª–∞–µ—Ç–µ —Å—Å—ã–ª–∫–∏, –∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤ –∑–∞–Ω–∏–º–∞—é—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
              –ü–æ—á—Ç–æ–π.–∫–æ–º. –û–Ω–∏ —Å–¥–µ–ª–∞—é—Ç –ø–æ–∫—É–ø–∫–∏ –∑–∞ –≤–∞—Å, –ø—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç –¥–æ—Å—Ç–∞–≤–∫—É
              –Ω–∞ —Å–∫–ª–∞–¥ –∏ —Å–æ–æ–±—â–∞—Ç, –∫–æ–≥–¥–∞ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.
            </p>
          </div>
          <div className="text-right font-semibold text-gray-800">
            <p>5% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤</p>
            <p>–º–∏–Ω–∏–º—É–º ¬£7 –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞</p>
            <p>–ù–æ –Ω–µ –º–µ–Ω–µ–µ ¬£7 –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–æ—Ç–∞ –≤ eBay</p>
          </div>
        </div>

        <div className="flex justify-between items-start p-4 bg-gray-100 rounded-lg border">
          <div className="max-w-lg">
            <h3 className="text-lg font-semibold mb-2">
              –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ —É—Å–ª—É–≥–µ "–ü–æ–∫—É–ø–∫–∞ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"
            </h3>
            <p className="text-sm text-gray-700">
              –¢—Ä–∏ —Ñ–æ—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞–º–∏ —Ç–æ–≤–∞—Ä–∞, –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω–æ–≥–æ –ø–æ —É—Å–ª—É–≥–µ "–ü–æ–ª–Ω–æ–µ
              —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ"
            </p>
          </div>
          <div className="text-right font-semibold text-gray-800">
            <p>¬£2</p>
          </div>
        </div>
      </div>

      <div className="flex items-center justify-between w-full max-w-6xl bg-gradient-to-r from-indigo-500 via-purple-500 to-blue-500 rounded-lg shadow-lg p-8 m-auto mt-[100px]">
        <div className="w-[30%] ml-[20px] mt-[20px]">
          <img
            src="../../../public/img/layout-img/–†–µ—Å—É—Ä—Å 1 6.png"
            alt=""
            className="max-w-full h-auto"
          />
        </div>
        <div className="w-1/2 pl-8">
          <h2 className="text-2xl font-bold mb-4 text-white">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.
          </h2>
          <p className="text-lg mb-6 text-white">
            –ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä, –µ–≥–æ –∫—É–ø—è—Ç –∏ –¥–æ—Å—Ç–∞–≤—è—Ç –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥ –≤
            –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.
          </p>
          <div className="flex items-center mb-4">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä"
              className="w-full px-4 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <button className="bg-green-500 text-white font-bold px-4 py-2 rounded-r-md hover:bg-green-600 transition duration-300">
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
          </div>
          <p className="text-xs text-gray-200 mt-2">
            –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
            –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏ –∏ –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
          </p>
        </div>
      </div>

      <div className="w-[85%] m-auto mt-[150px]">
        <h2 className="text-2xl font-bold mb-6">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</h2>

        <div className="space-y-4">
          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border">
            <div>
              <h3 className="text-lg font-semibold">–ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω–∞—è –ø–ª–µ–Ω–∫–∞</h3>
              <p className="text-sm text-gray-500">
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø–æ–∫—É–ø–æ–∫
              </p>
            </div>
            <div className="text-right font-bold text-gray-800">¬£3.99</div>
          </div>

          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border">
            <div>
              <h3 className="text-lg font-semibold">–£–ø–∞–∫–æ–≤–∫–∞ –≤ –ø–∞–∫–µ—Ç</h3>
              <p className="text-sm text-gray-500">–ù–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–ª–∞–≥–∏</p>
            </div>
            <div className="text-right font-bold text-gray-800">¬£1.99</div>
          </div>

          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border">
            <div>
              <h3 className="text-lg font-semibold">
                –£–ø–∞–∫–æ–≤–∫–∞ –≤ –∫–æ—Ä–æ–±–∫—É —Å –¥–≤–æ–π–Ω—ã–º–∏ —Å—Ç–µ–Ω–∫–∞–º–∏
              </h3>
              <p className="text-sm text-gray-500">–ù–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–ª–∞–≥–∏</p>
            </div>
            <div className="text-right font-bold text-gray-800">¬£4.99</div>
          </div>

          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border">
            <div>
              <h3 className="text-lg font-semibold">–ù–∞–∫–ª–µ–π–∫–∞ ‚Äú–•—Ä—É–ø–∫–∏–π –≥—Ä—É–∑‚Äù</h3>
              <p className="text-sm text-gray-500">
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø–æ–∫—É–ø–æ–∫
              </p>
            </div>
            <div className="text-right font-bold text-gray-800">¬£0.25</div>
          </div>

          <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border">
            <div>
              <h3 className="text-lg font-semibold">
                –ù–∞–∫–ª–µ–π–∫–∞ ‚Äú–û–±—Ä–∞—â–∞—Ç—å—Å—è —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é‚Äù
              </h3>
              <p className="text-sm text-gray-500">
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –ø–æ–∫—É–ø–æ–∫
              </p>
            </div>
            <div className="text-right font-bold text-gray-800">¬£0.25</div>
          </div>
        </div>
      </div>

      <div className="w-[95%] h-[170px] bg-[url('../../../public/img/layout-img/backround.png')] m-auto rounded-3xl mt-[100px] py-[50px] px-[60px] flex items-center justify-between mb-[100px]">
        <p className="text-[#FFFFFF] text-[35px] font-mono font-[600] w-[70%]">
          –£—Å–ª—É–≥–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏
        </p>

        <div className="flex items-center">
          <img src="../../../public/img/layout-img/–í–∞–π–±–µ—Ä.png" alt="" />
          <img
            className="ml-[10px] mr-[10px]"
            src="../../../public/img/layout-img/–í–∞—Ç—Å–∞–ø.png"
            alt=""
          />
          <img src="../../../public/img/layout-img/–ß–∞—Ç.png" alt="" />
        </div>
      </div>
    </>
  );
};

export default Abu;
